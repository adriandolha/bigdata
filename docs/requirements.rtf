{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh18220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Collect movielens data\
\
As a data scientist I\'92d like to collect movie ratings data in order to analyze it afterwards. \
The data should be collected from the following location:\
{\field{\*\fldinst{HYPERLINK "http://files.grouplens.org/datasets/movielens/ml-latest-small.zip"}}{\fldrslt ml-latest-small.zip}}\
The archive contains the following:\
Links.csv\
The csv contains the following fields:\
- movieId\
- imdbId\
- tmdbID\
\
Movies.csv\
- movieId\
- title\
- genres (separated by |)\
\
ratings.csv\
- userId\
- movieId\
- rating\
- timestamp\
\
Tags.csv\
- userId\
- movieID\
- tag\
-timestamp\
\
Requirements:\
1. Only ratings and movies should be saved in the same raw format (CSV)\
2. Each dataset should be saved with the following name: <dataset_name>_<yyyy_mm_dd>. E.g. movies_2018_06_04.csv\
3. In case of the following:\
- service unavailable\
- network timeout\
- network failure\
The request should be retried up to 3 times.\
4. The csv file size is not a concern.\
5. The csv file should not be validated at this point. \
6. Data collection service should fail if:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 - retry exceeded the maximum number (i.e. 3)\
- resource not found\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 7. Every error should be logged (even retry attempts) in the following format: \
Notes:\
1. Timestamp represents the number off seconds since Jan 01 1970 (UTC)\
\
Clean and validate ratings\
As a data scientist I\'92d like to have a ratings dataset clean and validated in order to be able to mine it. \
Requirements:\
\
1. A rating entry is considered invalid when:\
- timestamp format is invalid\
- userId, movieId are missing \
- userId, movieId are not numbers\
- userId, movieId don\'92t exist\
- rating is not a number\
- rating is not between 1-10\
2. The results should be stored in columnar format (parquet).\
\
Notes:\
1. Invalid entries should be logged separately when required.\
\
\
\
Find popular movies\
\
As IMDB business stakeholder I\'92d like to know which are the most 10 popular movies to recommend to all users.\
The most popular movies will be determined by ratings. The one with the highest number of ratings (sum) is the most popular one.\
The results will contain the following:\
- movie name\
- sum of all ratings\
The results will be displayed in descending order. \
\
General notes:\
1. Security is not required for this exercise.\
\
}